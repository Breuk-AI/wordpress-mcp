# Ruff configuration for WordPress MCP
# Phase 2 CI Enhancement - Non-blocking quality checks

[tool.ruff]
# Target Python 3.10
target-version = "py310"

# Line length (matching black default)
line-length = 88

# Files to check
include = ["*.py", "*.pyi", "**/pyproject.toml"]

# Exclude common directories
exclude = [
    ".git",
    ".venv",
    "venv",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".tox",
    ".mypy_cache",
    ".pytest_cache",
    ".coverage",
    "htmlcov",
]

# Enable these rule sets
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "W",   # pycodestyle warnings
    "I",   # isort
    "N",   # pep8-naming
    "B",   # flake8-bugbear
    "S",   # flake8-bandit (security)
    "A",   # flake8-builtins
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T10", # flake8-debugger
    "EXE", # flake8-executable
    "ISC", # flake8-implicit-str-concat
    "PIE", # flake8-pie
    "PT",  # flake8-pytest-style
    "Q",   # flake8-quotes
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "TCH", # flake8-type-checking
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate (commented-out code)
    "PL",  # pylint
    "RUF", # ruff-specific rules
]

# Ignore these specific rules
ignore = [
    "E501",    # Line too long (we have line-length set)
    "S101",    # Use of assert (needed for tests)
    "S105",    # Possible hardcoded password (false positives)
    "S106",    # Possible hardcoded password (false positives)
    "B008",    # Do not perform function calls in argument defaults
    "PLR0913", # Too many arguments
    "PLR0915", # Too many statements
    "PLR2004", # Magic value comparison
    "RET504",  # Unnecessary variable assignment before return
    "SIM108",  # Use ternary operator (sometimes less readable)
    "TCH001",  # Move import into type-checking block
    "TCH002",  # Move import into type-checking block
    "TCH003",  # Move import into type-checking block
]

# Allow these names even though they don't follow convention
[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "PLR2004"]  # Allow assert and magic values in tests
"test_*.py" = ["S101", "PLR2004"]

[tool.ruff.lint.isort]
# Configure import sorting
force-single-line = false
lines-after-imports = 2
known-first-party = ["wp_client", "monitoring", "tools"]

[tool.ruff.lint.mccabe]
# Maximum cyclomatic complexity
max-complexity = 10

[tool.ruff.lint.flake8-quotes]
# Prefer double quotes
inline-quotes = "double"

# Bandit configuration
[tool.bandit]
# Files to exclude from security scanning
exclude_dirs = [
    "tests",
    "test",
    ".venv",
    "venv",
    "__pycache__",
]

# Skip these test IDs
skips = [
    "B101",  # assert_used (needed for tests)
    "B601",  # shell_true (we validate inputs)
]

# Test severity level
severity = "medium"
