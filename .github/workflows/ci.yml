name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  test-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        cd mcp-server
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio pytest-cov mypy
    
    - name: Run tests
      run: |
        cd mcp-server
        pytest --cov=. --cov-report=xml
    
    - name: Type checking
      run: |
        cd mcp-server
        mypy server.py wp_client.py tools/ || true
    
    - name: Upload coverage
      if: matrix.python-version == '3.10'
      uses: codecov/codecov-action@v3
      with:
        file: ./mcp-server/coverage.xml

  test-wordpress-plugin:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'
        tools: composer, phpcs, phpunit
    
    - name: Check PHP syntax
      run: |
        find wp-mcp-plugin -name "*.php" -exec php -l {} \;
    
    - name: WordPress Coding Standards
      run: |
        composer global require wp-coding-standards/wpcs
        phpcs --config-set installed_paths ~/.composer/vendor/wp-coding-standards/wpcs
        phpcs --standard=WordPress wp-mcp-plugin/ || true

  build-and-release:
    needs: [test-python, test-wordpress-plugin]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Create plugin ZIP
      run: |
        cd wp-mcp-plugin
        zip -r ../wordpress-mcp-plugin.zip . -x "*.git*"
    
    - name: Create server archive
      run: |
        tar -czf wordpress-mcp-server.tar.gz mcp-server/
    
    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          wordpress-mcp-plugin.zip
          wordpress-mcp-server.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Snyk Security Scan
      uses: snyk/actions/python@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
      continue-on-error: true
    
    - name: Run Trivy Security Scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
